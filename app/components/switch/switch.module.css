/* 
.switch {
    position: relative;
    display: inline-block;
    width: 60px;
    height: 34px;
}

.switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    transition: .4s;
    border-radius: 34px;
}

.slider:before {
    position: absolute;
    content: "";
    height: 26px;
    width: 26px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    transition: .4s;
    border-radius: 50%;
}

input:checked+.slider {
    background-color: #2196F3;
}

input:checked+.slider:before {
    transform: translateX(26px);
} */

.SwitchRoot {
    display: inline-flex;
    height: 1.25rem;
    /* 5 / 4 = 1.25 */
    width: 2.25rem;
    /* 9 / 4 = 2.25 */
    flex-shrink: 0;
    cursor: pointer;
    align-items: center;
    justify-content: center;
    border-radius: 9999px;
    /* Large value for a circle */
    border-width: 2px;
    border-style: solid;
    border-color: transparent;
    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
    transition-property: background-color;
    transition-duration: 150ms;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    outline: none;
}

.SwitchRoot:focus-visible {
    outline: none;
    box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.5);
}

.SwitchRoot:disabled {
    cursor: not-allowed;
    opacity: 0.5;
}

.SwitchRoot[data-state="checked"] {
    background-color: #14b109;
}

.SwitchRoot[data-state="unchecked"] {
    background-color: #ed5306;
}

.SwitchThumb {
    display: block;
    pointer-events: none;
    height: 1rem;
    width: 1rem;
    border-radius: 9999px;
    background-color: #08bdfa;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    /* Example shadow, replace with your own */
    outline: 0;

    transition-property: transform;
    transition-duration: 150ms;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}




/* [data-state="checked"] {
    transform: translateX(1rem);
   
}

[data-state="unchecked"] {
    transform: translateX(0);
} */